/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DashRouteImport } from './routes/dash'
import { Route as DashIndexRouteImport } from './routes/dash/index'
import { Route as DashLoginRouteImport } from './routes/dash/login'

const DashRoute = DashRouteImport.update({
  id: '/dash',
  path: '/dash',
  getParentRoute: () => rootRouteImport,
} as any)
const DashIndexRoute = DashIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashRoute,
} as any)
const DashLoginRoute = DashLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => DashRoute,
} as any)

export interface FileRoutesByFullPath {
  '/dash': typeof DashRouteWithChildren
  '/dash/login': typeof DashLoginRoute
  '/dash/': typeof DashIndexRoute
}
export interface FileRoutesByTo {
  '/dash/login': typeof DashLoginRoute
  '/dash': typeof DashIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/dash': typeof DashRouteWithChildren
  '/dash/login': typeof DashLoginRoute
  '/dash/': typeof DashIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/dash' | '/dash/login' | '/dash/'
  fileRoutesByTo: FileRoutesByTo
  to: '/dash/login' | '/dash'
  id: '__root__' | '/dash' | '/dash/login' | '/dash/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  DashRoute: typeof DashRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dash': {
      id: '/dash'
      path: '/dash'
      fullPath: '/dash'
      preLoaderRoute: typeof DashRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dash/': {
      id: '/dash/'
      path: '/'
      fullPath: '/dash/'
      preLoaderRoute: typeof DashIndexRouteImport
      parentRoute: typeof DashRoute
    }
    '/dash/login': {
      id: '/dash/login'
      path: '/login'
      fullPath: '/dash/login'
      preLoaderRoute: typeof DashLoginRouteImport
      parentRoute: typeof DashRoute
    }
  }
}

interface DashRouteChildren {
  DashLoginRoute: typeof DashLoginRoute
  DashIndexRoute: typeof DashIndexRoute
}

const DashRouteChildren: DashRouteChildren = {
  DashLoginRoute: DashLoginRoute,
  DashIndexRoute: DashIndexRoute,
}

const DashRouteWithChildren = DashRoute._addFileChildren(DashRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  DashRoute: DashRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
