name: Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  release:
    name: release
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Release
        id: release
        uses: google-github-actions/release-please-action@v4

      - name: Docker - Checkout
        if: ${{ steps.release.outputs['release_created'] }}
        uses: actions/checkout@v4
      - name: Docker - Login to Docker Hub
        if: ${{ steps.release.outputs['release_created'] }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker - Login to GitHub Container Registry
        if: ${{ steps.release.outputs['release_created'] }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker - Set up Buildx
        if: ${{ steps.release.outputs['release_created'] }}
        uses: docker/setup-buildx-action@v3
      - name: Docker - Extract metadata
        if: ${{ steps.release.outputs['release_created'] }}
        id: docker_metadata
        uses: docker/metadata-action@v5
        with:
          images: |
            muniftanjim/stremthru
            ghcr.io/muniftanjim/stremthru
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}},enable=${{ !startsWith(github.ref, 'refs/tags/0.') }}
      - name: dDocker - Build
        if: ${{ steps.release.outputs['release_created'] }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          tags: ${{ steps.docker_metadata.outputs.tags }}
          labels: ${{ steps.docker_metadata.outputs.labels }}

      - name: SDK/JS - Checkout
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        uses: actions/checkout@v4
      - name: SDK/JS - Setup pnpm
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        uses: pnpm/action-setup@v4
        with:
          run_install: false
          package_json_file: sdk/js/package.json
      - name: SDK/JS - Setup Node.js
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: pnpm
          cache-dependency-path: sdk/js
          registry-url: https://registry.npmjs.org
      - name: SDK/JS - Install Dependencies
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        working-directory: sdk/js
        run: pnpm install
      - name: SDK/JS - Build
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        working-directory: sdk/js
        run: pnpm run build
      - name: SDK/JS - Publish
        if: ${{ steps.release.outputs['sdk/js--release_created'] }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: sdk/js
        run: pnpm publish

      - name: SDK/PY - Checkout
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        uses: actions/checkout@v4
      - name: SDK/PY - Setup Poetry
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        run: pipx install poetry
      - name: SDK/PY - Setup Python
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: poetry
          cache-dependency-path: |
            sdk/py/poetry.lock
            sdk/py/pyproject.toml
      - name: SDK/PY - Install Dependencies
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        working-directory: sdk/py
        run: poetry install --with dev
      - name: SDK/PY - Build
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        working-directory: sdk/py
        run: poetry build
      - name: SDK/PY - Publish
        if: ${{ steps.release.outputs['sdk/py--release_created'] }}
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        working-directory: sdk/py
        run: poetry publish --skip-existing
